[package]
name = "leptos-leaflet-hotline-ssr"
edition = "2021"
version = "0.1.0"
authors = ["Eric Krall"]
readme = "README.md"
license = "MIT"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
leptos = {version = "0.7.3", default-features=false }
leptos_meta = {version = "0.7.3", default-features=false }
leptos_router = {version = "0.7.3", default-features=false }
leptos-leaflet = {version = "0.9.1", default-features=false }
leptos_axum = {version = "0.7.3", optional=true }
leptos-use = {version = "0.15", optional=true, features=[]}

axum = {version = "0.7", optional = true }
console_error_panic_hook = "0.1"
console_log = "1.0"
tokio = { version = "1.36.0", features = [ "full" ], optional = true  }
tower = { version = "0.4.13", optional=true }
tower-http = { version = "0.5.2", features = ["fs"], optional=true }
log = "0.4"
simple_logger = "4.1"
wasm-bindgen = "=0.2.100"
tracing = {version = "0.1.37", optional = true }
tracing-subscriber = {version = "0.3.17", optional = true }
getrandom = "0.2"
leptos-leaflet-hotline = { path = "../../leptos-leaflet-hotline" }

[dev-dependencies]
wasm-bindgen-test = "0.3.49"
wasm-bindgen-cli = "0.2.100"

[features]
hydrate = [
    "leptos/hydrate",
    "leptos-leaflet/hydrate",
    "getrandom/js",
]
ssr = [
    "dep:axum",
    "dep:tokio",
    "dep:tower",
    "dep:tower-http",
    "leptos/ssr",
    "leptos_meta/ssr",
    "dep:leptos_axum",
    "leptos_router/ssr",
    "leptos-leaflet/ssr",
    "dep:tracing",
    "dep:tracing-subscriber",
    "leptos-use/ssr",
    "leptos-use/axum",
]

[profile.release]
panic = "abort"
opt-level = 'z'
lto = true
codegen-units = 1

[package.metadata.cargo-all-features]
denylist = ["axum", "tokio", "tower", "tower-http", "leptos_axum" ]
skip_feature_sets = [["ssr", "hydrate"]]

[package.metadata.leptos]
# this name is used for the wasm, js and css file names
name = "leptos-leaflet-hotline-ssr"

# the package in the workspace that contains the server binary (binary crate)
bin-package = "server"

# the package in the workspace that contains the frontend wasm binary (library crate)
lib-package = "frontend"

# The site root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
site-root = "target/site"

# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
# Defaults to pkg
site-pkg-dir = "pkg"

# [Optional] The source CSS file. If it ends with .sass or .scss then it will be compiled by dart-sass into CSS. The CSS is optimized by Lightning CSS before being written to <site-root>/<site-pkg>/app.css
style-file = "style/main.scss"

# Assets source dir. All files found here will be copied and synchronized to site-root.
# The assets-dir cannot have a sub directory with the same name/path as site-pkg-dir.
#
# Optional. Env: LEPTOS_ASSETS_DIR.
assets-dir = "public"

# The IP and port (ex: 127.0.0.1:3000) where the server serves the content. Use it in your server setup.
site-addr = "127.0.0.1:3000"

# The port to use for automatic reload monitoring
reload-port = 3001

# [Optional] Command to use when running end2end tests. It will run in the end2end dir.
#   [Windows] for non-WSL use "npx.cmd playwright test"
#   This binary name can be checked in Powershell with Get-Command npx
end2end-cmd = "npx playwright test"
end2end-dir = "end2end"

#  The browserlist query used for optimizing the CSS.
browserquery = "defaults"

# Set by cargo-leptos watch when building with that tool. Controls whether autoreload JS will be included in the head
watch = false

# The environment Leptos will run in, usually either "DEV" or "PROD"
env = "DEV"

# The features to use when compiling the bin target
#
# Optional. Can be over-ridden with the command line parameter --bin-features
bin-features = ["ssr"]

# If the --no-default-features flag should be used when compiling the bin target
#
# Optional. Defaults to false.
bin-default-features = false

# The features to use when compiling the lib target
#
# Optional. Can be over-ridden with the command line parameter --lib-features
lib-features = ["hydrate"]

# If the --no-default-features flag should be used when compiling the lib target
#
# Optional. Defaults to false.
lib-default-features = false
